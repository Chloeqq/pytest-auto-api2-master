{
  "uid": "60f33134280702ae",
  "name": "test_jklogin[密码为空]",
  "fullName": "test_case.JkLogin.test_jklogin.TestJklogin#test_jklogin",
  "historyId": "29e892aac48dfaac1e86c608b5b691e7",
  "time": {
    "start": 1658389339011,
    "stop": 1658389339125,
    "duration": 114
  },
  "description": "\n        :param :\n        :return:\n        ",
  "descriptionHtml": "<pre><code>    :param :\n    :return:\n</code></pre>\n",
  "status": "failed",
  "statusMessage": "AssertionError",
  "statusTrace": "self = <test_jklogin.TestJklogin object at 0x1054cc3d0>\nin_data = {'assert': {'code': {'AssertType': None, 'jsonpath': '$.code', 'type': '==', 'value': '000002'}, 'message': {'AssertTy..._set_cache': None, 'data': {'loginName': '13330809542', 'password': ' ', 'platform': 3}, 'dependence_case': False, ...}\ncase_skip = None\n\n    @allure.story(\"登录\")\n    @pytest.mark.parametrize('in_data', eval(re_data), ids=[i['detail'] for i in TestData])\n    def test_jklogin(self, in_data, case_skip):\n        \"\"\"\n        :param :\n        :return:\n        \"\"\"\n        res = RequestControl().http_request(in_data)\n        TearDownHandler().teardown_handle(res)\n>       Assert(in_data['assert']).assert_equality(response_data=res['response_data'],\n                                                  sql_data=res['sql_data'], status_code=res['status_code'])\n\ntest_case/JkLogin/test_jklogin.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/assertUtils/assertControl.py:133: in assert_equality\n    self.assert_type_handle(assert_type, sql_data, assert_value, key, values, resp_data)\nutils/assertUtils/assertControl.py:113: in assert_type_handle\n    self._assert_type(types=self.assert_data[key]['type'], key=resp_data[0], value=assert_value)\nutils/assertUtils/assertControl.py:43: in _assert_type\n    equals(check_value=key, expect_value=value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncheck_value = '[密码长度为6-16个字符] [密码不能为空] '\nexpect_value = '[密码长度为6-16个字符] [密码不能为空]'\n\n    def equals(check_value, expect_value):\n        \"\"\"判断是否相等\"\"\"\n    \n>       assert check_value == expect_value\nE       AssertionError\n\nutils/assertUtils/assert_type.py:15: AssertionError",
  "flaky": false,
  "newFailed": false,
  "newBroken": false,
  "newPassed": false,
  "retriesCount": 0,
  "retriesStatusChange": false,
  "beforeStages": [
    {
      "name": "_session_faker",
      "time": {
        "start": 1658389336677,
        "stop": 1658389336691,
        "duration": 14
      },
      "status": "passed",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "stepsCount": 0,
      "attachmentsCount": 0,
      "shouldDisplayMessage": false,
      "hasContent": false
    },
    {
      "name": "get_x_jk_x",
      "time": {
        "start": 1658389336691,
        "stop": 1658389336695,
        "duration": 4
      },
      "status": "passed",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "stepsCount": 0,
      "attachmentsCount": 0,
      "shouldDisplayMessage": false,
      "hasContent": false
    },
    {
      "name": "work_login_init",
      "time": {
        "start": 1658389336695,
        "stop": 1658389336832,
        "duration": 137
      },
      "status": "passed",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "stepsCount": 0,
      "attachmentsCount": 0,
      "shouldDisplayMessage": false,
      "hasContent": false
    },
    {
      "name": "write_case_process",
      "time": {
        "start": 1658389336832,
        "stop": 1658389336889,
        "duration": 57
      },
      "status": "passed",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "stepsCount": 0,
      "attachmentsCount": 0,
      "shouldDisplayMessage": false,
      "hasContent": false
    },
    {
      "name": "case_skip",
      "time": {
        "start": 1658389339011,
        "stop": 1658389339011,
        "duration": 0
      },
      "status": "passed",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "stepsCount": 0,
      "attachmentsCount": 0,
      "shouldDisplayMessage": false,
      "hasContent": false
    }
  ],
  "testStage": {
    "description": "\n        :param :\n        :return:\n        ",
    "status": "failed",
    "statusMessage": "AssertionError",
    "statusTrace": "self = <test_jklogin.TestJklogin object at 0x1054cc3d0>\nin_data = {'assert': {'code': {'AssertType': None, 'jsonpath': '$.code', 'type': '==', 'value': '000002'}, 'message': {'AssertTy..._set_cache': None, 'data': {'loginName': '13330809542', 'password': ' ', 'platform': 3}, 'dependence_case': False, ...}\ncase_skip = None\n\n    @allure.story(\"登录\")\n    @pytest.mark.parametrize('in_data', eval(re_data), ids=[i['detail'] for i in TestData])\n    def test_jklogin(self, in_data, case_skip):\n        \"\"\"\n        :param :\n        :return:\n        \"\"\"\n        res = RequestControl().http_request(in_data)\n        TearDownHandler().teardown_handle(res)\n>       Assert(in_data['assert']).assert_equality(response_data=res['response_data'],\n                                                  sql_data=res['sql_data'], status_code=res['status_code'])\n\ntest_case/JkLogin/test_jklogin.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/assertUtils/assertControl.py:133: in assert_equality\n    self.assert_type_handle(assert_type, sql_data, assert_value, key, values, resp_data)\nutils/assertUtils/assertControl.py:113: in assert_type_handle\n    self._assert_type(types=self.assert_data[key]['type'], key=resp_data[0], value=assert_value)\nutils/assertUtils/assertControl.py:43: in _assert_type\n    equals(check_value=key, expect_value=value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncheck_value = '[密码长度为6-16个字符] [密码不能为空] '\nexpect_value = '[密码长度为6-16个字符] [密码不能为空]'\n\n    def equals(check_value, expect_value):\n        \"\"\"判断是否相等\"\"\"\n    \n>       assert check_value == expect_value\nE       AssertionError\n\nutils/assertUtils/assert_type.py:15: AssertionError",
    "steps": [
      {
        "name": "请求URL: http://acgi.tst.jianke.com/passport/account/login/v2",
        "time": {
          "start": 1658389339117,
          "stop": 1658389339117,
          "duration": 0
        },
        "status": "passed",
        "steps": [],
        "attachments": [],
        "parameters": [],
        "stepsCount": 0,
        "attachmentsCount": 0,
        "shouldDisplayMessage": false,
        "hasContent": false
      },
      {
        "name": "请求方式: POST",
        "time": {
          "start": 1658389339117,
          "stop": 1658389339117,
          "duration": 0
        },
        "status": "passed",
        "steps": [],
        "attachments": [],
        "parameters": [],
        "stepsCount": 0,
        "attachmentsCount": 0,
        "shouldDisplayMessage": false,
        "hasContent": false
      },
      {
        "name": "请求头: ",
        "time": {
          "start": 1658389339117,
          "stop": 1658389339119,
          "duration": 2
        },
        "status": "passed",
        "steps": [],
        "attachments": [
          {
            "uid": "f55c60907f8a6f71",
            "name": "请求头: ",
            "source": "f55c60907f8a6f71.json",
            "type": "application/json",
            "size": 38
          }
        ],
        "parameters": [],
        "stepsCount": 0,
        "attachmentsCount": 1,
        "shouldDisplayMessage": false,
        "hasContent": true
      },
      {
        "name": "请求数据: ",
        "time": {
          "start": 1658389339119,
          "stop": 1658389339119,
          "duration": 0
        },
        "status": "passed",
        "steps": [],
        "attachments": [
          {
            "uid": "4b50c7d86ffffbe2",
            "name": "请求数据: ",
            "source": "4b50c7d86ffffbe2.json",
            "type": "application/json",
            "size": 62
          }
        ],
        "parameters": [],
        "stepsCount": 0,
        "attachmentsCount": 1,
        "shouldDisplayMessage": false,
        "hasContent": true
      },
      {
        "name": "依赖数据: ",
        "time": {
          "start": 1658389339119,
          "stop": 1658389339119,
          "duration": 0
        },
        "status": "passed",
        "steps": [],
        "attachments": [
          {
            "uid": "4a79cc1d164b8530",
            "name": "依赖数据: ",
            "source": "4a79cc1d164b8530.json",
            "type": "application/json",
            "size": 32
          }
        ],
        "parameters": [],
        "stepsCount": 0,
        "attachmentsCount": 1,
        "shouldDisplayMessage": false,
        "hasContent": true
      },
      {
        "name": "预期数据: ",
        "time": {
          "start": 1658389339119,
          "stop": 1658389339120,
          "duration": 1
        },
        "status": "passed",
        "steps": [],
        "attachments": [
          {
            "uid": "3905cf00c007461c",
            "name": "预期数据: ",
            "source": "3905cf00c007461c.json",
            "type": "application/json",
            "size": 243
          }
        ],
        "parameters": [],
        "stepsCount": 0,
        "attachmentsCount": 1,
        "shouldDisplayMessage": false,
        "hasContent": true
      },
      {
        "name": "响应耗时(s): 90.521",
        "time": {
          "start": 1658389339120,
          "stop": 1658389339120,
          "duration": 0
        },
        "status": "passed",
        "steps": [],
        "attachments": [],
        "parameters": [],
        "stepsCount": 0,
        "attachmentsCount": 0,
        "shouldDisplayMessage": false,
        "hasContent": false
      },
      {
        "name": "响应结果: ",
        "time": {
          "start": 1658389339120,
          "stop": 1658389339120,
          "duration": 0
        },
        "status": "passed",
        "steps": [],
        "attachments": [
          {
            "uid": "9818f90e3f2e0fa6",
            "name": "响应结果: ",
            "source": "9818f90e3f2e0fa6.json",
            "type": "application/json",
            "size": 87
          }
        ],
        "parameters": [],
        "stepsCount": 0,
        "attachmentsCount": 1,
        "shouldDisplayMessage": false,
        "hasContent": true
      }
    ],
    "attachments": [
      {
        "uid": "e36d0ce6163e3046",
        "name": "log",
        "source": "e36d0ce6163e3046.txt",
        "type": "text/plain",
        "size": 758
      }
    ],
    "parameters": [],
    "stepsCount": 8,
    "attachmentsCount": 6,
    "shouldDisplayMessage": true,
    "hasContent": true
  },
  "afterStages": [],
  "labels": [
    {
      "name": "story",
      "value": "登录"
    },
    {
      "name": "feature",
      "value": "登录模块"
    },
    {
      "name": "epic",
      "value": "开发平台接口"
    },
    {
      "name": "parentSuite",
      "value": "test_case.JkLogin"
    },
    {
      "name": "suite",
      "value": "test_jklogin"
    },
    {
      "name": "subSuite",
      "value": "TestJklogin"
    },
    {
      "name": "host",
      "value": "Bettys-MacBook-Pro.local"
    },
    {
      "name": "thread",
      "value": "36618-MainThread"
    },
    {
      "name": "framework",
      "value": "pytest"
    },
    {
      "name": "language",
      "value": "cpython3"
    },
    {
      "name": "package",
      "value": "test_case.JkLogin.test_jklogin"
    },
    {
      "name": "resultFormat",
      "value": "allure2"
    }
  ],
  "parameters": [
    {
      "name": "in_data",
      "value": "{'method': 'POST', 'is_run': None, 'url': 'http://acgi.tst.jianke.com/passport/account/login/v2', 'detail': '密码为空', 'headers': {'Content-Type': 'application/json'}, 'requestType': 'JSON', 'data': {'loginName': '13330809542', 'password': ' ', 'platform': 3}, 'dependence_case': False, 'dependence_case_data': {'dependence_case_data': None}, 'current_request_set_cache': None, 'sql': None, 'assert': {'status_code': 400, 'code': {'jsonpath': '$.code', 'type': '==', 'value': '000002', 'AssertType': None}, 'message': {'jsonpath': '$.message', 'type': '==', 'value': '[密码长度为6-16个字符] [密码不能为空]', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None}"
    }
  ],
  "links": [],
  "hidden": false,
  "retry": false,
  "extra": {
    "severity": "normal",
    "retries": [],
    "categories": [
      {
        "name": "Product defects",
        "matchedStatuses": [],
        "flaky": false
      }
    ],
    "tags": []
  },
  "source": "60f33134280702ae.json",
  "parameterValues": [
    "{'method': 'POST', 'is_run': None, 'url': 'http://acgi.tst.jianke.com/passport/account/login/v2', 'detail': '密码为空', 'headers': {'Content-Type': 'application/json'}, 'requestType': 'JSON', 'data': {'loginName': '13330809542', 'password': ' ', 'platform': 3}, 'dependence_case': False, 'dependence_case_data': {'dependence_case_data': None}, 'current_request_set_cache': None, 'sql': None, 'assert': {'status_code': 400, 'code': {'jsonpath': '$.code', 'type': '==', 'value': '000002', 'AssertType': None}, 'message': {'jsonpath': '$.message', 'type': '==', 'value': '[密码长度为6-16个字符] [密码不能为空]', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None}"
  ]
}