{
  "uid": "1bc84e3ce350c4b9",
  "name": "test_jkflash[查询全局广告信息]",
  "fullName": "test_case.JkPromos.test_jkflash.TestJkflash#test_jkflash",
  "historyId": "b5147afdd38e7c3078f3f6ee2128fab9",
  "time": {
    "start": 1658389342054,
    "stop": 1658389343192,
    "duration": 1138
  },
  "description": "\n        :param :\n        :return:\n        ",
  "descriptionHtml": "<pre><code>    :param :\n    :return:\n</code></pre>\n",
  "status": "failed",
  "statusMessage": "AssertionError",
  "statusTrace": "self = <test_jkflash.TestJkflash object at 0x1054d59c0>\nin_data = {'assert': {'data': {'AssertType': None, 'jsonpath': '$.data', 'type': 'contains', 'value': 'globalStyle'}, 'status_code': 200}, 'current_request_set_cache': None, 'data': None, 'dependence_case': False, ...}\ncase_skip = None\n\n    @allure.story(\"秒杀活动\")\n    @pytest.mark.parametrize('in_data', eval(re_data), ids=[i['detail'] for i in TestData])\n    def test_jkflash(self, in_data, case_skip):\n        \"\"\"\n        :param :\n        :return:\n        \"\"\"\n        res = RequestControl().http_request(in_data)\n        TearDownHandler().teardown_handle(res)\n>       Assert(in_data['assert']).assert_equality(response_data=res['response_data'],\n                                                  sql_data=res['sql_data'], status_code=res['status_code'])\n\ntest_case/JkPromos/test_jkflash.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.assertUtils.assertControl.Assert object at 0x10548ba60>\nresponse_data = {'message': '', 'path': '/v5/flash', 'statusCode': 500, 'success': False, ...}\nsql_data = {'sql': None}, status_code = 500\n\n    def assert_equality(self, response_data: dict, sql_data: dict, status_code):\n        # 判断数据类型\n        if self._check_params(response_data, sql_data) is not False:\n            for key, values in self.assert_data.items():\n                if key == \"status_code\":\n>                   assert status_code == values\nE                   AssertionError\n\nutils/assertUtils/assertControl.py:122: AssertionError",
  "flaky": false,
  "newFailed": false,
  "newBroken": false,
  "newPassed": false,
  "retriesCount": 0,
  "retriesStatusChange": false,
  "beforeStages": [
    {
      "name": "_session_faker",
      "time": {
        "start": 1658389336677,
        "stop": 1658389336691,
        "duration": 14
      },
      "status": "passed",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "stepsCount": 0,
      "attachmentsCount": 0,
      "shouldDisplayMessage": false,
      "hasContent": false
    },
    {
      "name": "get_x_jk_x",
      "time": {
        "start": 1658389336691,
        "stop": 1658389336695,
        "duration": 4
      },
      "status": "passed",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "stepsCount": 0,
      "attachmentsCount": 0,
      "shouldDisplayMessage": false,
      "hasContent": false
    },
    {
      "name": "work_login_init",
      "time": {
        "start": 1658389336695,
        "stop": 1658389336832,
        "duration": 137
      },
      "status": "passed",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "stepsCount": 0,
      "attachmentsCount": 0,
      "shouldDisplayMessage": false,
      "hasContent": false
    },
    {
      "name": "write_case_process",
      "time": {
        "start": 1658389336832,
        "stop": 1658389336889,
        "duration": 57
      },
      "status": "passed",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "stepsCount": 0,
      "attachmentsCount": 0,
      "shouldDisplayMessage": false,
      "hasContent": false
    },
    {
      "name": "case_skip",
      "time": {
        "start": 1658389342054,
        "stop": 1658389342054,
        "duration": 0
      },
      "status": "passed",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "stepsCount": 0,
      "attachmentsCount": 0,
      "shouldDisplayMessage": false,
      "hasContent": false
    }
  ],
  "testStage": {
    "description": "\n        :param :\n        :return:\n        ",
    "status": "failed",
    "statusMessage": "AssertionError",
    "statusTrace": "self = <test_jkflash.TestJkflash object at 0x1054d59c0>\nin_data = {'assert': {'data': {'AssertType': None, 'jsonpath': '$.data', 'type': 'contains', 'value': 'globalStyle'}, 'status_code': 200}, 'current_request_set_cache': None, 'data': None, 'dependence_case': False, ...}\ncase_skip = None\n\n    @allure.story(\"秒杀活动\")\n    @pytest.mark.parametrize('in_data', eval(re_data), ids=[i['detail'] for i in TestData])\n    def test_jkflash(self, in_data, case_skip):\n        \"\"\"\n        :param :\n        :return:\n        \"\"\"\n        res = RequestControl().http_request(in_data)\n        TearDownHandler().teardown_handle(res)\n>       Assert(in_data['assert']).assert_equality(response_data=res['response_data'],\n                                                  sql_data=res['sql_data'], status_code=res['status_code'])\n\ntest_case/JkPromos/test_jkflash.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.assertUtils.assertControl.Assert object at 0x10548ba60>\nresponse_data = {'message': '', 'path': '/v5/flash', 'statusCode': 500, 'success': False, ...}\nsql_data = {'sql': None}, status_code = 500\n\n    def assert_equality(self, response_data: dict, sql_data: dict, status_code):\n        # 判断数据类型\n        if self._check_params(response_data, sql_data) is not False:\n            for key, values in self.assert_data.items():\n                if key == \"status_code\":\n>                   assert status_code == values\nE                   AssertionError\n\nutils/assertUtils/assertControl.py:122: AssertionError",
    "steps": [
      {
        "name": "请求URL: http://fe-acgi-v2.tst.jianke.com/v5/flash",
        "time": {
          "start": 1658389343181,
          "stop": 1658389343181,
          "duration": 0
        },
        "status": "passed",
        "steps": [],
        "attachments": [],
        "parameters": [],
        "stepsCount": 0,
        "attachmentsCount": 0,
        "shouldDisplayMessage": false,
        "hasContent": false
      },
      {
        "name": "请求方式: GET",
        "time": {
          "start": 1658389343181,
          "stop": 1658389343182,
          "duration": 1
        },
        "status": "passed",
        "steps": [],
        "attachments": [],
        "parameters": [],
        "stepsCount": 0,
        "attachmentsCount": 0,
        "shouldDisplayMessage": false,
        "hasContent": false
      },
      {
        "name": "请求头: ",
        "time": {
          "start": 1658389343182,
          "stop": 1658389343184,
          "duration": 2
        },
        "status": "passed",
        "steps": [],
        "attachments": [
          {
            "uid": "ba2683dc584bce70",
            "name": "请求头: ",
            "source": "ba2683dc584bce70.json",
            "type": "application/json",
            "size": 1104
          }
        ],
        "parameters": [],
        "stepsCount": 0,
        "attachmentsCount": 1,
        "shouldDisplayMessage": false,
        "hasContent": true
      },
      {
        "name": "请求数据: ",
        "time": {
          "start": 1658389343184,
          "stop": 1658389343185,
          "duration": 1
        },
        "status": "passed",
        "steps": [],
        "attachments": [
          {
            "uid": "fb9a8a06f8799bc4",
            "name": "请求数据: ",
            "source": "fb9a8a06f8799bc4.json",
            "type": "application/json",
            "size": 6
          }
        ],
        "parameters": [],
        "stepsCount": 0,
        "attachmentsCount": 1,
        "shouldDisplayMessage": false,
        "hasContent": true
      },
      {
        "name": "依赖数据: ",
        "time": {
          "start": 1658389343185,
          "stop": 1658389343185,
          "duration": 0
        },
        "status": "passed",
        "steps": [],
        "attachments": [
          {
            "uid": "369f9dec2014955",
            "name": "依赖数据: ",
            "source": "369f9dec2014955.json",
            "type": "application/json",
            "size": 32
          }
        ],
        "parameters": [],
        "stepsCount": 0,
        "attachmentsCount": 1,
        "shouldDisplayMessage": false,
        "hasContent": true
      },
      {
        "name": "预期数据: ",
        "time": {
          "start": 1658389343185,
          "stop": 1658389343185,
          "duration": 0
        },
        "status": "passed",
        "steps": [],
        "attachments": [
          {
            "uid": "d2244a8b9137be75",
            "name": "预期数据: ",
            "source": "d2244a8b9137be75.json",
            "type": "application/json",
            "size": 118
          }
        ],
        "parameters": [],
        "stepsCount": 0,
        "attachmentsCount": 1,
        "shouldDisplayMessage": false,
        "hasContent": true
      },
      {
        "name": "响应耗时(s): 1115.377",
        "time": {
          "start": 1658389343185,
          "stop": 1658389343185,
          "duration": 0
        },
        "status": "passed",
        "steps": [],
        "attachments": [],
        "parameters": [],
        "stepsCount": 0,
        "attachmentsCount": 0,
        "shouldDisplayMessage": false,
        "hasContent": false
      },
      {
        "name": "响应结果: ",
        "time": {
          "start": 1658389343186,
          "stop": 1658389343186,
          "duration": 0
        },
        "status": "passed",
        "steps": [],
        "attachments": [
          {
            "uid": "5facdd693bd2beff",
            "name": "响应结果: ",
            "source": "5facdd693bd2beff.json",
            "type": "application/json",
            "size": 116
          }
        ],
        "parameters": [],
        "stepsCount": 0,
        "attachmentsCount": 1,
        "shouldDisplayMessage": false,
        "hasContent": true
      }
    ],
    "attachments": [
      {
        "uid": "f6575eb1b0520d43",
        "name": "log",
        "source": "f6575eb1b0520d43.txt",
        "type": "text/plain",
        "size": 1799
      }
    ],
    "parameters": [],
    "stepsCount": 8,
    "attachmentsCount": 6,
    "shouldDisplayMessage": true,
    "hasContent": true
  },
  "afterStages": [],
  "labels": [
    {
      "name": "feature",
      "value": "秒杀模块"
    },
    {
      "name": "story",
      "value": "秒杀活动"
    },
    {
      "name": "epic",
      "value": "开发平台接口"
    },
    {
      "name": "parentSuite",
      "value": "test_case.JkPromos"
    },
    {
      "name": "suite",
      "value": "test_jkflash"
    },
    {
      "name": "subSuite",
      "value": "TestJkflash"
    },
    {
      "name": "host",
      "value": "Bettys-MacBook-Pro.local"
    },
    {
      "name": "thread",
      "value": "36618-MainThread"
    },
    {
      "name": "framework",
      "value": "pytest"
    },
    {
      "name": "language",
      "value": "cpython3"
    },
    {
      "name": "package",
      "value": "test_case.JkPromos.test_jkflash"
    },
    {
      "name": "resultFormat",
      "value": "allure2"
    }
  ],
  "parameters": [
    {
      "name": "in_data",
      "value": "{'method': 'GET', 'is_run': None, 'url': 'http://fe-acgi-v2.tst.jianke.com/v5/flash', 'detail': '查询全局广告信息', 'headers': {'Content-Type': 'application/json', 'authorization': '$cache{token}', 'platform': 'app', 'x-jk-udid': 'BB1A9D8E-F469-4E1A-88E4-E2BA4B570038', 'versionname': '6.4.1', 'x-jk-x': '$cache{x_jk_x}'}, 'requestType': 'JSON', 'data': None, 'dependence_case': False, 'dependence_case_data': {'dependence_case_data': None}, 'current_request_set_cache': None, 'sql': None, 'assert': {'status_code': 200, 'data': {'jsonpath': '$.data', 'type': 'contains', 'value': 'globalStyle', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None}"
    }
  ],
  "links": [],
  "hidden": false,
  "retry": false,
  "extra": {
    "severity": "normal",
    "retries": [],
    "categories": [
      {
        "name": "Product defects",
        "matchedStatuses": [],
        "flaky": false
      }
    ],
    "tags": []
  },
  "source": "1bc84e3ce350c4b9.json",
  "parameterValues": [
    "{'method': 'GET', 'is_run': None, 'url': 'http://fe-acgi-v2.tst.jianke.com/v5/flash', 'detail': '查询全局广告信息', 'headers': {'Content-Type': 'application/json', 'authorization': '$cache{token}', 'platform': 'app', 'x-jk-udid': 'BB1A9D8E-F469-4E1A-88E4-E2BA4B570038', 'versionname': '6.4.1', 'x-jk-x': '$cache{x_jk_x}'}, 'requestType': 'JSON', 'data': None, 'dependence_case': False, 'dependence_case_data': {'dependence_case_data': None}, 'current_request_set_cache': None, 'sql': None, 'assert': {'status_code': 200, 'data': {'jsonpath': '$.data', 'type': 'contains', 'value': 'globalStyle', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None}"
  ]
}