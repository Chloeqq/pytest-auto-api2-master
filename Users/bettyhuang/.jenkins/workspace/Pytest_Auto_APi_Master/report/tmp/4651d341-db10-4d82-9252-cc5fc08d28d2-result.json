{
  "name": "test_jkflash[查询全局广告信息]",
  "status": "failed",
  "statusDetails": {
    "message": "AssertionError",
    "trace": "self = <test_jkflash.TestJkflash object at 0x1054d59c0>\nin_data = {'assert': {'data': {'AssertType': None, 'jsonpath': '$.data', 'type': 'contains', 'value': 'globalStyle'}, 'status_code': 200}, 'current_request_set_cache': None, 'data': None, 'dependence_case': False, ...}\ncase_skip = None\n\n    @allure.story(\"秒杀活动\")\n    @pytest.mark.parametrize('in_data', eval(re_data), ids=[i['detail'] for i in TestData])\n    def test_jkflash(self, in_data, case_skip):\n        \"\"\"\n        :param :\n        :return:\n        \"\"\"\n        res = RequestControl().http_request(in_data)\n        TearDownHandler().teardown_handle(res)\n>       Assert(in_data['assert']).assert_equality(response_data=res['response_data'],\n                                                  sql_data=res['sql_data'], status_code=res['status_code'])\n\ntest_case/JkPromos/test_jkflash.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.assertUtils.assertControl.Assert object at 0x10548ba60>\nresponse_data = {'message': '', 'path': '/v5/flash', 'statusCode': 500, 'success': False, ...}\nsql_data = {'sql': None}, status_code = 500\n\n    def assert_equality(self, response_data: dict, sql_data: dict, status_code):\n        # 判断数据类型\n        if self._check_params(response_data, sql_data) is not False:\n            for key, values in self.assert_data.items():\n                if key == \"status_code\":\n>                   assert status_code == values\nE                   AssertionError\n\nutils/assertUtils/assertControl.py:122: AssertionError"
  },
  "description": "\n        :param :\n        :return:\n        ",
  "steps": [
    {
      "name": "请求URL: http://fe-acgi-v2.tst.jianke.com/v5/flash",
      "status": "passed",
      "start": 1658389343181,
      "stop": 1658389343181
    },
    {
      "name": "请求方式: GET",
      "status": "passed",
      "start": 1658389343181,
      "stop": 1658389343182
    },
    {
      "name": "请求头: ",
      "status": "passed",
      "attachments": [
        {
          "name": "请求头: ",
          "source": "19e79874-db3e-48db-ade6-278ae7c1d80e-attachment.json",
          "type": "application/json"
        }
      ],
      "start": 1658389343182,
      "stop": 1658389343184
    },
    {
      "name": "请求数据: ",
      "status": "passed",
      "attachments": [
        {
          "name": "请求数据: ",
          "source": "5ad5be0c-8d86-43c8-b34c-0699622dbb2e-attachment.json",
          "type": "application/json"
        }
      ],
      "start": 1658389343184,
      "stop": 1658389343185
    },
    {
      "name": "依赖数据: ",
      "status": "passed",
      "attachments": [
        {
          "name": "依赖数据: ",
          "source": "622c4d05-c325-4f13-a415-c5aee7e2c389-attachment.json",
          "type": "application/json"
        }
      ],
      "start": 1658389343185,
      "stop": 1658389343185
    },
    {
      "name": "预期数据: ",
      "status": "passed",
      "attachments": [
        {
          "name": "预期数据: ",
          "source": "85f1a9e7-9c11-4339-8828-410fe64cef92-attachment.json",
          "type": "application/json"
        }
      ],
      "start": 1658389343185,
      "stop": 1658389343185
    },
    {
      "name": "响应耗时(s): 1115.377",
      "status": "passed",
      "start": 1658389343185,
      "stop": 1658389343185
    },
    {
      "name": "响应结果: ",
      "status": "passed",
      "attachments": [
        {
          "name": "响应结果: ",
          "source": "252d5761-0f7d-4b50-975e-133f31c528a1-attachment.json",
          "type": "application/json"
        }
      ],
      "start": 1658389343186,
      "stop": 1658389343186
    }
  ],
  "attachments": [
    {
      "name": "log",
      "source": "22f441fa-cdb1-4aef-a915-4ebc69ecb8b5-attachment.txt",
      "type": "text/plain"
    }
  ],
  "parameters": [
    {
      "name": "in_data",
      "value": "{'method': 'GET', 'is_run': None, 'url': 'http://fe-acgi-v2.tst.jianke.com/v5/flash', 'detail': '查询全局广告信息', 'headers': {'Content-Type': 'application/json', 'authorization': '$cache{token}', 'platform': 'app', 'x-jk-udid': 'BB1A9D8E-F469-4E1A-88E4-E2BA4B570038', 'versionname': '6.4.1', 'x-jk-x': '$cache{x_jk_x}'}, 'requestType': 'JSON', 'data': None, 'dependence_case': False, 'dependence_case_data': {'dependence_case_data': None}, 'current_request_set_cache': None, 'sql': None, 'assert': {'status_code': 200, 'data': {'jsonpath': '$.data', 'type': 'contains', 'value': 'globalStyle', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None}"
    }
  ],
  "start": 1658389342054,
  "stop": 1658389343192,
  "uuid": "0beca18e-b599-4cda-9e46-88cfe5eeb1e6",
  "historyId": "b5147afdd38e7c3078f3f6ee2128fab9",
  "testCaseId": "9df7099452a9d4287b8ee5113fcaa971",
  "fullName": "test_case.JkPromos.test_jkflash.TestJkflash#test_jkflash",
  "labels": [
    {
      "name": "feature",
      "value": "秒杀模块"
    },
    {
      "name": "story",
      "value": "秒杀活动"
    },
    {
      "name": "epic",
      "value": "开发平台接口"
    },
    {
      "name": "parentSuite",
      "value": "test_case.JkPromos"
    },
    {
      "name": "suite",
      "value": "test_jkflash"
    },
    {
      "name": "subSuite",
      "value": "TestJkflash"
    },
    {
      "name": "host",
      "value": "Bettys-MacBook-Pro.local"
    },
    {
      "name": "thread",
      "value": "36618-MainThread"
    },
    {
      "name": "framework",
      "value": "pytest"
    },
    {
      "name": "language",
      "value": "cpython3"
    },
    {
      "name": "package",
      "value": "test_case.JkPromos.test_jkflash"
    }
  ]
}